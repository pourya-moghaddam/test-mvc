@model Test.Models.CategoryFieldViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>CategoryField</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CategoryField.Id" />
            <div class="form-group">
                <label asp-for="CategoryField.Name" class="control-label"></label>
                <input asp-for="CategoryField.Name" class="form-control" />
                <span asp-validation-for="CategoryField.Name" class="text-danger"></span>
            </div>
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.CategoryField.Values)
                </dt>
                <dd class="col-sm-10">
                    @{
                        var fieldValues = Model.CategoryField.Values;
                        if (fieldValues == null) {Console.WriteLine("fieldValues NULL");
                        }
                        if (fieldValues != null)
                        {
                            var stringFieldValues = string.Join(", ", fieldValues);
                            
                            @Html.DisplayFor(model => stringFieldValues)
                        }
                    }

                </dd>
            </dl>
            <div class="form-group">
                <button type="button" class="btn btn-success" onclick="addValueInput()">Add Value</button>
                <input type="hidden" id="value-count" name="valueCount" value="0"/>
            </div>
            <div id="submit-button" class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        function addValueInput() {
            let count = parseInt(document.getElementById("value-count").value);
            
            let input = document.createElement("input");
            input.type = "text";
            input.name = "FieldValues[" + count + "]";
            input.className = "form-control";
            input.placeholder = "Enter a value";
            let inputContainer = document.createElement("div");
            inputContainer.class = "form-group";
            inputContainer.appendChild(input);
            
            document.querySelector("form").insertBefore(inputContainer, document.getElementById("submit-button"));
            document.getElementById("value-count").value = count + 1;
        }
    </script>
}
