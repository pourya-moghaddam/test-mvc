@using System.Configuration
@model Test.Models.ProductViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Product.Name" class="control-label"></label>
                <input asp-for="Product.Name" class="form-control" />
                <span asp-validation-for="Product.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Description" class="control-label"></label>
                <input asp-for="Product.Description" class="form-control" />
                <span asp-validation-for="Product.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Color" class="control-label"></label>
                <input asp-for="Product.Color" class="form-control" />
                <span asp-validation-for="Product.Color" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageFile.File" class="control-label"></label>
                <input asp-for="ImageFile.File" class="form-control" type="file" />
                <span asp-validation-for="ImageFile.File" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Price" class="control-label"></label>
                <input asp-for="Product.Price" class="form-control" />
                <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            @* <div class="form-group"> *@
            @*     <label class="control-label">AAAAAAAAAAA</label> *@
            @*     <select class="form-control" id="category-select" asp-items="ViewBag.CategoryId" onchange="location.href='@Url.Action("Index", "Home")'"></select> *@
            @*     <h1 id="select-value"></h1> *@
            @* </div> *@
            @* <div class="form-group"> *@
            @*     <select onselect=""></select> *@
            @* </div> *@
            @{
                if (ViewBag.CurrentCategoryId == null)
                {
                    <div class="form-group">
                        <label class="control-label">Category</label>
                        <select asp-for="Product.CategoryId" class="form-control" id="category-select" asp-items="ViewBag.CategoryId">
                            @* <option selected value="@ViewData["CategoryId"]" >@ViewData["CategoryName"]</option> *@
                        </select>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <label class="control-label">Category</label>
                        <select asp-for="Product.CategoryId" class="form-control" id="category-select" asp-items="ViewBag.CategoryId">
                            <option selected value="@ViewData["CurrentCategoryId"]" >@ViewData["CategoryName"]</option>
                        </select>
                    </div>
                }
            }
            @* <div class="form-group"> *@
            @*     <label asp-for="Product.CategoryId" class="control-label"></label> *@
            @*     <select asp-for="Product.CategoryId" class="form-control" id="category-select" asp-items="ViewBag.CategoryId"> *@
            @*         $1$ <option selected value="@ViewData["CategoryId"]" >@ViewData["CategoryName"]</option> #1# *@
            @*     </select> *@
            @* </div> *@
            @* @foreach (string field in ViewBag.CategoryFields) *@
            @* { *@
            @*     <div class="form-group"> *@
            @*         @{ *@
            @*             Model.FieldValuePairs *@
            @*         } *@
            @*         <label asp-for="CategoryFields.Fields[field]" class="control-label"></label> *@
            @*         <input asp-for="CategoryFields.Fields[field]" class="form-control"/> *@
            @*         <span asp-validation-for="CategoryFields.Fields[field]" class="text-danger"></span> *@
            @*     </div> *@
            @* } *@
            @{
                // foreach (CategoryField field in ViewBag.CategoryFields)
                // {
                //     FieldValuePair fieldValuePair = new FieldValuePair();
                //     fieldValuePair.FieldId = field.Id;
                //     Model.Product.FieldValuePairs.Add(fieldValuePair);
                // }

                for (int i = 0; i < Model.Product.FieldValuePairs.Count; i++)
                {
                    // Console.WriteLine(Model.Product.FieldValuePairs[i].FieldId);
                    // Model.Product.FieldValuePairs.Add(new FieldValuePair());
                    // Model.Product.FieldValuePairs[i].FieldId = ViewBag.CategoryFields[i].Id;
                    var selectList = (List<SelectListItem>?)ViewData[$"{ViewBag.CategoryFields[i].Name}Values"];
                                     <div class="form-group" hidden>
                        <label asp-for="Product.FieldValuePairs[i].FieldId" class="control-label"></label>
                        <input asp-for="Product.FieldValuePairs[i].FieldId" class="form-control" value="@ViewBag.CategoryFields[i].Id"/>
                        <span asp-validation-for="Product.FieldValuePairs[i].FieldId" class="text-danger"></span>
                    </div>
                    @* <div class="form-group"> *@
                    @*     <label asp-for="Product.FieldValuePairs[i].Value" class="control-label"></label> *@
                    @*     <input asp-for="Product.FieldValuePairs[i].Value" class="form-control"/> *@
                    @*     <span asp-validation-for="Product.FieldValuePairs[i].Value" class="text-danger"></span> *@
                    @* </div> *@
                    <div class="form-group">
                        <label class="control-label">@ViewBag.CategoryFields[i].Name</label>
                        <select asp-for="Product.FieldValuePairs[i].Value" class="form-control" asp-items="@selectList"></select>
                        <span asp-validation-for="Product.FieldValuePairs[i].Value" class="text-danger"></span>
                    </div>
                }
                
            }
            @* @foreach(var kvp in Model.CategoryFields.Fields) *@
            @* { *@
            @*     $1$ <input type="checkbox" name="@("MyDictionary[" + kvp.Key + "]")" #1# *@
            @*     $1$        value="@kvp.Value" /> #1# *@
            @*     Console.WriteLine("{0} : {1}", kvp.Key, kvp.Value); *@
            @*     var field = Model.CategoryFields.Fields[kvp.Key]; *@
            @*     <label class="control-label"></label> *@
            @*     <input class="form-control" name="@field" /> *@
            @*     <span asp-validation-for="@field" class="text-danger" value="@kvp.Value"></span> *@
            @* } *@
            <div class="form-group">
                <input asp-page-handler="Upload" type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // var selectElement = document.getElementById("category-select");
        // var selectedOption = selectElement.options[ selectElement.selectedIndex ].value;
        
        
        // function SelectCategory(selectObject)
        // {
        //    $.ajax({
        //       url: '/Products/Create/',
        //       type: 'GET',
        //       async: false,
        //       data: { categoryId: selectObject.value }
        //    }).done(function() {
        //       alert('Added' + selectObject.value); 
        //    });
           
            // Attach change event listener to the select element
        document.getElementById('category-select').addEventListener('change', function () {
        // Get the selected option value
                       var selectedOption = this.value;
                       // If a valid option is selected, redirect to the same page with the selected option as a query parameter
                       if (selectedOption) {
                           window.location.href = '@Url.Action("Create", "Products")' + '?categoryId=' + encodeURIComponent(selectedOption);
                       }
                   });
    </script>
}
